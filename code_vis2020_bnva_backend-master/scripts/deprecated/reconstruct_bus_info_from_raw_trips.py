#!/usr/bin/python
# -*- coding: utf8 -*-

# raw trip csv file format:
#   cardId, time, consumeAmount, balance, company, from_stop (numeric), to_stop (numeric), from_info (station_name;lon lat), to_info (station_name;lon lat)

import csv
import eviltransform
import sys

STATIONS_TO_SKIP = ['北京巴士股份有限公司671主线', '北京巴士股份有限公司641主线', '北京巴士股份有限公司620主线', '第一客运分公司618主线', '运通104', '北京巴士股份有限公司617主线', '八方达客运公司985', '北京巴士股份有限公司741主线', '第一客运分公司670主线', '北京巴士股份有限公司636主线', '第一客运分公司658主线', '北京巴士股份有限公司696主线', '第一客运分公司694主线', '第五客运分公司628主线', '第二客运分公司678主线', '第一客运分公司681主线', '第五客运分公司718主线', '北京巴士股份有限公司685主线', '北京巴士股份有限公司731主线', '第一客运分公司699主线', '北京巴士股份有限公司621主线', '北京巴士股份有限公司687主线', '第一客运分公司607主线', '运通114', '北京巴士股份有限公司701主线', '北京巴士股份有限公司693主线', '第四客运分公司632主线', '第一客运分公司653主线', '北京巴士股份有限公司695主线', '电车客运分公司623主线', '八方达客运公司852主线', '第四客运分公司651主线', '八方达客运公司985主线', '北京巴士股份有限公司714主线', '北京巴士股份有限公司691主线', '北京巴士股份有限公司690主线', '八方达客运公司944', '第五客运分公司635主线', '北京巴士股份有限公司609主线', '北京巴士股份有限公司660主线', '北京巴士股份有限公司758主线', '北京巴士股份有限公司629主线', '运通201', '北京巴士股份有限公司630主线', '北京巴士股份有限公司625主线', '运通101', '北京巴士股份有限公司663主线', '八方达客运公司982', '运通108', '运通111', '北京巴士股份有限公司668主线', '第四客运分公司717主线', '北京巴士股份有限公司753主线', '八方达客运公司966', '运通205', '运通112', '运通103', '第四客运分公司664主线', '运通118', '第六客运分公司612主线', '北京巴士股份有限公司656主线', '北京巴士股份有限公司665主线', '北京巴士股份有限公司608主线', '第二客运分公司603主线', '北京巴士股份有限公司750主线', '运通115', '第五客运分公司648主线', '第五客运分公司639主线', '北京巴士股份有限公司751主线', '运通106', '第六客运分公司728主线', '第四客运分公司697主线', '北京巴士股份有限公司683主线', '第六客运分公司611主线', '北京巴士股份有限公司675主线', '第六客运分公司604主线', '北京巴士股份有限公司674主线', '北京巴士股份有限公司715主线', '北京巴士股份有限公司707主线', '运通107', '运通113', '北京巴士股份有限公司657主线', '八方达客运公司848主线', '第二客运分公司610主线', '北京巴士股份有限公司677主线', '北京巴士股份有限公司684主线', '运通102', '北京巴士股份有限公司686主线', '北京巴士股份有限公司673主线', '运通110', '运通117', '北京巴士股份有限公司614主线', '北京巴士股份有限公司680主线', '第六客运分公司692主线', '北京巴士股份有限公司723主线', '第五客运分公司605主线', '北京巴士股份有限公司601主线', '第五客运分公司649主线', '北京巴士股份有限公司689主线', '北京巴士股份有限公司616主线', '北京巴士股份有限公司615主线', '北京巴士股份有限公司672主线', '八方达客运公司983', '第五客运分公司647主线', '第五客运分公司637主线', '北京巴士股份有限公司688主线', '第六客运分公司661主线', '北京巴士股份有限公司667主线', '北京巴士股份有限公司729主线', '北京巴士股份有限公司646主线', '第六客运分公司624主线', '北京巴士股份有限公司698主线', '第二客运分公司652主线', '八方达客运公司840主线', '北京巴士股份有限公司666主线', '第四客运分公司613主线', '第五客运分公司640主线', '第二客运分公司631快车', '第五客运分公司638主线', '北京巴士股份有限公司618主线', '八方达客运公司647主线', '第一客运分公司628主线', '第一客运分公司985', '北京巴士股份有限公司740内环', '第四客运分公司683主线', '北京巴士股份有限公司668', '北京巴士股份有限公司740外环', '第一客运分公司944', '第五客运分公司675主线', '第五客运分公司665主线', '北京巴士股份有限公司669主线', '八方达客运公司681主线', '北京巴士股份有限公司692主线', '八方达客运公司807主线', '北京巴士股份有限公司985', '第一客运分公司609主线', '第五客运分公司690主线', '第六客运分公司728', '八方达客运公司753主线', '北京巴士股份有限公司944', '八方达客运公司625主线', '北京巴士股份有限公司611主线', '北京巴士股份有限公司637主线', '北京巴士股份有限公司664主线', '第二客运分公司729主线', '北京巴士股份有限公司612主线', '第五客运分公司608主线', '北京巴士股份有限公司982', '第一客运分公司604主线', '第五客运分公司729主线', '第五客运分公司684主线', '第六客运分公司615主线', '北京巴士股份有限公司605主线', '第五客运分公司686主线', '北京巴士股份有限公司728主线', '北京巴士股份有限公司669', '北京巴士股份有限公司667', '北京巴士股份有限公司661主线', '八方达客运公司668主线', '第二客运分公司714主线', '八方达客运公司646主线', '北京巴士股份有限公司613主线', '八方达客运公司612主线', '第一客运分公司696主线', '八方达客运公司717主线', '八方达客运公司689主线', '北京巴士股份有限公司623主线', '八方达客运公司750主线', '北京巴士股份有限公司639主线', '八方达客运公司665主线', '八方达客运公司653主线', '第五客运分公司609主线', '八方达客运公司684主线', '八方达客运公司630主线', '第五客运分公司753主线', '北京巴士股份有限公司983', '第六客运分公司718主线', '八方达客运公司657主线', '第二客运分公司665主线', '北京巴士股份有限公司717主线', '第四客运分公司758主线', '第五客运分公司603主线', '第六客运分公司750主线', '第五客运分公司621主线', '八方达客运公司678主线', '第六客运分公司741主线', '第一客运分公司715主线', '第六客运分公司639主线', '第四客运分公司944', '八方达客运公司729主线', '八方达客运公司707主线', '北京巴士股份有限公司648主线', '八方达客运公司609主线', '第一客运分公司698主线', '八方达客运公司688主线', '八方达客运公司691主线', '北京巴士股份有限公司631快车', '八方达客运公司701主线', '八方达客运公司621主线', '八方达客运公司640主线', '八方达客运公司651主线', '第五客运分公司615主线', '八方达客运公司610主线', '八方达客运公司667主线', '北京巴士股份有限公司628主线', '八方达客运公司617主线', '第一客运分公司624主线', '第四客运分公司691主线', '北京巴士股份有限公司653主线', '第四客运分公司656主线', '第一客运分公司657主线', '第六客运分公司664主线', '八方达客运公司731主线', '第五客运分公司728主线', '北京巴士股份有限公司638主线', '八方达客运公司631快车', '北京巴士股份有限公司647主线', '第四客运分公司663主线', '第五客运分公司695主线', '八方达客运公司686主线', '第五客运分公司674主线', '八方达客运公司618主线', '八方达客运公司728主线', '第五客运分公司685主线', '北京巴士股份有限公司624主线', '八方达客运公司652主线', '第五客运分公司715主线', '八方达客运公司624主线', '第六客运分公司691主线', '第四客运分公司603主线', '八方达客运公司694主线', '北京巴士股份有限公司966', '电车客运分公司697主线', '八方达客运公司639主线', '第五客运分公司731主线', '第一客运分公司621主线', '第六客运分公司982', '八方达客运公司692主线', '第一客运分公司656主线', '八方达客运公司758主线', '八方达客运公司648主线', '第一客运分公司614主线', '第二客运分公司728主线', '第五客运分公司651主线', '八方达客运公司680主线', '第四客运分公司715主线', '第六客运分公司603主线', '第六客运分公司701主线', '北京巴士股份有限公司697主线', '北京巴士股份有限公司670主线', '八方达客运公司663主线', '八方达客运公司723主线', '北京巴士股份有限公司640主线', '北京巴士股份有限公司632主线', '第六客运分公司617主线', '第六客运分公司729主线', '电车客运分公司701主线', '八方达客运公司666主线', '第一客运分公司717主线', '八方达客运公司671主线', '第五客运分公司750主线', '第一客运分公司625主线', '八方达客运公司674主线', '第一客运分公司684主线', '北京巴士股份有限公司604主线', '北京巴士股份有限公司681主线', '北京巴士股份有限公司718主线', '第五客运分公司667主线', '八方达客运公司677主线', '八方达客运公司698主线', '第二客运分公司685主线', '北京巴士股份有限公司603主线', '北京巴士股份有限公司678主线', '八方达客运公司632主线', '第五客运分公司620主线', '第一客运分公司603主线', '八方达客运公司608主线', '八方达客运公司690主线', '第四客运分公司660主线', '第一客运分公司630主线', '第五客运分公司985', '八方达客运公司715主线', '北京巴士股份有限公司649主线', '第六客运分公司693主线', '第二客运分公司693主线', '北京巴士股份有限公司607主线', '第二客运分公司707主线', '第六客运分公司663主线', '北京巴士股份有限公司807主线', '八方达客运公司638主线', '第六客运分公司675主线', '八方达客运公司693主线', '八方达客运公司751主线', '北京巴士股份有限公司985主线', '八方达客运公司718主线', '第二客运分公司623主线', '八方达客运公司623主线', '第一客运分公司617主线', '第六客运分公司684主线', '北京巴士股份有限公司635主线', '第五客运分公司618主线', '第一客运分公司611主线', '八方达客运公司635主线', '八方达客运公司637主线', '八方达客运公司620主线', '第四客运分公司696主线', '北京巴士股份有限公司651主线', '八方达客运公司697主线', '八方达客运公司687主线', '第二客运分公司715主线', '第四客运分公司636主线', '八方达客运公司636主线', '第四客运分公司628主线', '八方达客运公司664主线', '第二客运分公司612主线', '第一客运分公司613主线', '第一客运分公司683主线', '第五客运分公司723主线', '八方达客运公司649主线', '第一客运分公司641主线', '电车客运分公司685主线', '八方达客运公司661主线', '八方达客运公司611主线', '第五客运分公司701主线', '第一客运分公司695主线', '八方达客运公司670主线', '第六客运分公司608主线', '第六客运分公司653主线', '八方达客运公司603主线', '第一客运分公司691主线', '第六客运分公司715主线', '北京巴士股份有限公司699主线', '第五客运分公司629主线', '第二客运分公司646主线', '第六客运分公司668主线', '八方达客运公司672主线', '第六客运分公司690主线', '北京巴士股份有限公司694主线', '第五客运分公司657主线', '第一客运分公司751主线', '第六客运分公司694主线', '第四客运分公司695主线', '八方达客运公司604主线', '第一客运分公司646主线', '第五客运分公司601主线', '第六客运分公司717主线', '八方达客运公司641主线', '第二客运分公司698主线', '八方达客运公司628主线', '八方达客运公司613主线', '第四客运分公司601主线', '第四客运分公司699主线', '八方达客运公司656主线', '第四客运分公司982', '八方达客运公司605主线', '第一客运分公司601主线', '第五客运分公司610主线', '第二客运分公司621主线', '八方达客运公司728', '第四客运分公司612主线', '北京巴士股份有限公司658主线', '八方达客运公司675主线', '第一客运分公司632主线', '第五客运分公司966', '第四客运分公司687主线', '第五客运分公司683主线', '八方达客运公司629主线', '第一客运分公司985主线', '第二客运分公司632主线', '第六客运分公司649主线', '第二客运分公司741主线', '北京巴士股份有限公司610主线', '第一客运分公司635主线', '第四客运分公司658主线', '北京巴士股份有限公司728', '第一客运分公司983', '第四客运分公司689主线', '第四客运分公司685主线', '第一客运分公司848主线', '第四客运分公司661主线', '八方达客运公司669', '第五客运分公司687主线', '电车客运分公司675主线', '电车客运分公司758主线', '第六客运分公司613主线', '第六客运分公司695主线', '第二客运分公司613主线', '第四客运分公司693主线', '电车客运分公司688主线', '第一客运分公司689主线', '第六客运分公司641主线', '第一客运分公司731主线', '八方达客运公司667', '八方达客运公司601主线', '电车客运分公司684主线', '第六客运分公司689主线', '八方达客运公司669主线', '第五客运分公司697主线', '八方达客运公司673主线', '第一客运分公司697主线', '八方达客运公司607主线', '第六客运分公司647主线', '第四客运分公司646主线', '八方达客运公司614主线', '第五客运分公司612主线', '第六客运分公司658主线', '第四客运分公司620主线', '第二客运分公司635主线', '第二客运分公司840主线', '第四客运分公司694主线', '第六客运分公司758主线', '第五客运分公司807主线', '第六客运分公司983', '第六客运分公司698主线', '第六客运分公司688主线', '第四客运分公司604主线', '第一客运分公司639主线', '八方达客运公司695主线', '第一客运分公司728主线', '第一客运分公司636主线', '八方达客运公司741主线', '第二客运分公司616主线', '第四客运分公司681主线', '八方达客运公司696主线', '第五客运分公司617主线', '第六客运分公司657主线', '八方达客运公司615主线', '北京巴士股份有限公司852主线', '第五客运分公司680主线', '第二客运分公司723主线', '北京巴士股份有限公司652主线', '第一客运分公司701主线', '八方达客运公司616主线', '第四客运分公司608主线', '第五客运分公司656主线', '第四客运分公司609主线', '第一客运分公司840主线', '第五客运分公司758主线', '第四客运分公司666主线', '第一客运分公司620主线', '第一客运分公司663主线', '第五客运分公司717主线', '第六客运分公司666主线', '第六客运分公司731主线', '第四客运分公司617主线', '第五客运分公司668主线', '第二客运分公司692主线', '第二客运分公司604主线', '第二客运分公司753主线', '第一客运分公司982', '第四客运分公司701主线', '第一客运分公司637主线', '第一客运分公司672主线', '八方达客运公司660主线']

def parse_stop_info(info):
    parts = info.split(';')
    coords = parts[1].split(' ')
    return {
        'name': parts[0].strip(),
        'coords_gcj': [float(coords[0]), float(coords[1])],
        'coords_wgs': eviltransform.gcj2wgs_exact(float(coords[1]), float(coords[0]))[::-1]
    }

def merge_stops(company, sn, stops):
    name = stops[0]['name']
    lon_wgs, lat_wgs, lon_gcj, lat_gcj, cnt = 0.0, 0.0, 0.0, 0.0, 0
    for s in stops:
        if s['name'] != name:
            print('warning: conflict station names on route %s stop %d: %s <> %s' % (company, sn, name, s['name']))
        cnt += 1
        lon_wgs += (s['coords_wgs'][0] - lon_wgs) / cnt
        lat_wgs += (s['coords_wgs'][1] - lat_wgs) / cnt
        lon_gcj += (s['coords_gcj'][0] - lon_gcj) / cnt
        lat_gcj += (s['coords_gcj'][1] - lat_gcj) / cnt
        dist = eviltransform.distance(lat_wgs, lon_wgs, s['coords_wgs'][1], s['coords_wgs'][0])
        if dist > 5:
            print('warning: station positions differ on route %s stop %d: %f meters apart' % (company, sn, dist))
    return {
        'name': name,
        'coords_gcj': [lon_gcj, lat_gcj],
        'coords_wgs': [lon_wgs, lat_wgs]
    }

def get_max_station_number(d):
    maxsn = 0
    for sn in d.keys():
        maxsn = max(sn, maxsn)
    return maxsn

def extract_routes_from_raw_trips(filename):
    routes = {}
    with open(filename) as f:
        r = csv.DictReader(f)
        for row in r:
            if row['company'] in STATIONS_TO_SKIP:
                continue
            if not row['company'] in routes:
                routes[row['company']] = {
                    "forward": {},
                    "backward": {}
                }

            from_stop = int(row['from_stop'])
            to_stop = int(row['to_stop'])
            if from_stop < to_stop:
                if not from_stop in routes[row['company']]['forward']: routes[row['company']]['forward'][from_stop] = []
                if not to_stop in routes[row['company']]['forward']: routes[row['company']]['forward'][to_stop] = []
                routes[row['company']]['forward'][from_stop].append(parse_stop_info(row['from_info']))
                routes[row['company']]['forward'][to_stop].append(parse_stop_info(row['to_info']))
            else:
                if not from_stop in routes[row['company']]['backward']: routes[row['company']]['backward'][from_stop] = []
                if not to_stop in routes[row['company']]['backward']: routes[row['company']]['backward'][to_stop] = []
                routes[row['company']]['backward'][from_stop].append(parse_stop_info(row['from_info']))
                routes[row['company']]['backward'][to_stop].append(parse_stop_info(row['to_info']))

    for name, r in routes.items():
        r['forward'] = {sn: merge_stops(name, sn, stops) for sn, stops in r['forward'].items()}
        r['backward'] = {sn: merge_stops(name, sn, stops) for sn, stops in r['backward'].items()}
        if get_max_station_number(r['forward']) != len(r['forward']):
            print('warning: missing stops in route %s (forward): %d missing' % (name, get_max_station_number(r['forward']) - len(r['forward'])))
        if get_max_station_number(r['backward']) != len(r['backward']):
            print('warning: missing stops in route %s (backward): %d missing' % (name, get_max_station_number(r['backward']) - len(r['backward'])))
    return routes

def station_exists(stations, ts):
    for s in stations:
        if eviltransform.distance(s['coords_wgs'][1], s['coords_wgs'][0], ts['coords_wgs'][1], ts['coords_wgs'][0]) < 2:
            return True
    return False

def dump_stations(filename, routes):
    stations = []
    stations_by_name = {}
    for name, r in routes.items():
        for s in r['forward']:
            if not s['name'] in stations_by_name:
                stations_by_name[s['name']] = []
            if not station_exists(stations_by_name[s['name']], s):
                stations.append(s)
                s['id'] = len(stations)
                stations_by_name[s['name']].append(s)
    with open(filename, 'w') as f:
        w = csv.writer(f)
        w.writerow(['id', 'name', 'wgs_lon', 'wgs_lat', 'gcj_lon', 'gcj_lat'])
        for s in stations:
            w.writerow([s['id'], s['name'], *s['coords_wgs'], *s['coords_gcj']])

def dump_routes(filename, routes):
    with open(filename, 'w') as f:
        w = csv.writer(f)
        w.writerow(['id', 'reverse', 'name', 'stations'])
        for i, (name, r) in enumerate(routes.items()):
            if len(r['forward']) != 0:
                w.writerow([i, 0, name, ';'.join(map(str, [s[1]['id'] for s in sorted(r['forward'].items(), key=lambda x: x[0])]))])
            if len(r['backward']) != 0:
                w.writerow([i, 1, name, ';'.join(map(str, [s[1]['id'] for s in sorted(r['backward'].items(), key=lambda x: x[0])]))])

def main():
    if len(sys.argv) != 4:
        print('Usage: %s raw_trips_csv_file station_csv_file route_csv_file')
        exit(1)
    routes = extract_routes_from_raw_trips(sys.argv[1])
    print('found %d routes' % len(routes))
    dump_stations(sys.argv[2], routes)
    dump_routes(sys.argv[3], routes)

if __name__ == "__main__":
    main()